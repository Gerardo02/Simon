/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pantallas;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;


/**
 *
 * @author gerar
 */
public class Game extends javax.swing.JDialog {
    
    ArrayList<String> inputResponse = new ArrayList<String>();
    ArrayList<String> selectedArrayNumbers = new ArrayList<String>();
    private String[] randomArrayNumbers;
    private int currentIndex = 0;
    private boolean waiting = true;
    private int points = 0;
    private int arrayIndexResponse = 0;
    
    public void setRandomArrayNumbers(String[] randomArrayNumbers){
        this.randomArrayNumbers = randomArrayNumbers;
    }
    
    

    /**
     * Creates new form Game
     */
    public Game(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnRojo = new javax.swing.JButton();
        btnVerde = new javax.swing.JButton();
        btnAmarillo = new javax.swing.JButton();
        btnAzul = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        btnRojo.setBackground(new java.awt.Color(255, 0, 0));
        btnRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRojoActionPerformed(evt);
            }
        });

        btnVerde.setBackground(new java.awt.Color(51, 204, 0));
        btnVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerdeActionPerformed(evt);
            }
        });

        btnAmarillo.setBackground(new java.awt.Color(255, 255, 0));
        btnAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmarilloActionPerformed(evt);
            }
        });

        btnAzul.setBackground(new java.awt.Color(0, 102, 153));
        btnAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzulActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextColor(int index) {
       
        selectedArrayNumbers.add(randomArrayNumbers[index]);
        //System.out.println(selectedArrayNumbers);
        
    }
    private Timer StarterTimer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (currentIndex == 0) {
                waiting = true;
                selectedArrayNumbers.add(randomArrayNumbers[currentIndex]);
                String buttonToClick = selectedArrayNumbers.get(currentIndex);
                clickButton(buttonToClick);
                currentIndex++;
                //System.out.println(selectedArrayNumbers);
            }
            else {
                currentIndex = 0;
                StarterTimer.stop();
                waiting = false;
            }
        }
    });
    
    private Timer nextTimer = new Timer(500, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (currentIndex < selectedArrayNumbers.size()) {
                waiting = true;
                String buttonToClick = selectedArrayNumbers.get(currentIndex);
                clickButton(buttonToClick);
                currentIndex++;
                //System.out.println(selectedArrayNumbers);
            } else {
                currentIndex = 0;
                nextTimer.stop();
                waiting = false;
            }
        }
    });
    
    private void clickButton(String buttonNumber) {
        switch (buttonNumber) {
            case "1":
                btnRojo.doClick();
                break;
            case "2":
                btnAmarillo.doClick();
                break;
            case "3":
                btnVerde.doClick();
                break;
            case "4":
                btnAzul.doClick();
                break;
        }
    }
    
    private void invokeScoreScreen() {
        Main main = new Main();
        Score scoreScreen = new Score(main, true);
        scoreScreen.setPoints(points);
        scoreScreen.setLocationRelativeTo(null);
        scoreScreen.setVisible(true);
        
    }
    
    
    private void btnAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmarilloActionPerformed
        // TODO add your handling code here:
        if (waiting) {
            return;
        }
        
        inputResponse.add("2");
        
        if(!inputResponse.get(arrayIndexResponse).equals(selectedArrayNumbers.get(arrayIndexResponse))) {
            nextTimer.stop();
            this.dispose();
            invokeScoreScreen();
            return;
        }
        if(inputResponse.size() == selectedArrayNumbers.size()) {
            if(!inputResponse.equals(selectedArrayNumbers)) {
                nextTimer.stop();
                this.dispose();
                invokeScoreScreen();
                return;
            }
            arrayIndexResponse = 0;
            inputResponse.clear();
            points += 1;
            if(points == 50) {
                invokeScoreScreen();
                return;
            }
            nextColor(points);
            nextTimer.start();
            return;
        }
        arrayIndexResponse = arrayIndexResponse + 1;
    }//GEN-LAST:event_btnAmarilloActionPerformed

    private void btnAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzulActionPerformed
        // TODO add your handling code here:
        if (waiting) {
            return;
        }
        
        inputResponse.add("4");
        if(!inputResponse.get(arrayIndexResponse).equals(selectedArrayNumbers.get(arrayIndexResponse))) {
            nextTimer.stop();
            this.dispose();
            invokeScoreScreen();
            return;
        }
        if(inputResponse.size() == selectedArrayNumbers.size()) {
            if(!inputResponse.equals(selectedArrayNumbers)) {
                nextTimer.stop();
                this.dispose();
                invokeScoreScreen();
                return;
            }
            arrayIndexResponse = 0;
            inputResponse.clear();
            points += 1;
            if(points == 50) {
                invokeScoreScreen();
                return;
            }
            nextColor(points);
            nextTimer.start();
            return;
        }
        arrayIndexResponse = arrayIndexResponse + 1;
       
        
        
    }//GEN-LAST:event_btnAzulActionPerformed

    private void btnRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRojoActionPerformed

        if (waiting) {
            return;
        }
        
        inputResponse.add("1");
        if(!inputResponse.get(arrayIndexResponse).equals(selectedArrayNumbers.get(arrayIndexResponse))) {
            nextTimer.stop();
            this.dispose();
            invokeScoreScreen();
            return;
        }
        if(inputResponse.size() == selectedArrayNumbers.size()) {
            if(!inputResponse.equals(selectedArrayNumbers)) {
                nextTimer.stop();
                this.dispose();
                invokeScoreScreen();
                return;
            }
            arrayIndexResponse = 0;
            inputResponse.clear();
            points += 1;
            if(points == 50) {
                invokeScoreScreen();
                return;
            }
            nextColor(points);
            nextTimer.start();
            return;
        }
        arrayIndexResponse = arrayIndexResponse + 1;
        
    }//GEN-LAST:event_btnRojoActionPerformed

    private void btnVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerdeActionPerformed
        // TODO add your handling code here:
        if (waiting) {
            return;
        }
        
        inputResponse.add("3");
        if(!inputResponse.get(arrayIndexResponse).equals(selectedArrayNumbers.get(arrayIndexResponse))) {
            nextTimer.stop();
            this.dispose();
            invokeScoreScreen();
            return;
        }
        if(inputResponse.size() == selectedArrayNumbers.size()) {
            if(!inputResponse.equals(selectedArrayNumbers)) {
                nextTimer.stop();
                this.dispose();
                invokeScoreScreen();
                return;
            }
            arrayIndexResponse = 0;
            inputResponse.clear();
            points += 1;
            if(points == 50) {
                invokeScoreScreen();
                return;
            }
            nextColor(points);
            nextTimer.start();
            return;
        }
        arrayIndexResponse = arrayIndexResponse + 1;
        
    }//GEN-LAST:event_btnVerdeActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        StarterTimer.start();
    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        StarterTimer.stop();
        nextTimer.stop();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Game dialog = new Game(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmarillo;
    private javax.swing.JButton btnAzul;
    private javax.swing.JButton btnRojo;
    private javax.swing.JButton btnVerde;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
